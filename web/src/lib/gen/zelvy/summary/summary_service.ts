// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               unknown
// source: zelvy/summary/summary_service.proto

/* eslint-disable */
import {
  type CallOptions,
  ChannelCredentials,
  Client,
  type ClientOptions,
  type ClientUnaryCall,
  type handleUnaryCall,
  makeGenericClientConstructor,
  Metadata,
  type ServiceError,
  type UntypedServiceImplementation,
} from "@grpc/grpc-js";
import { AddSummaryRequest } from "./add_summary_request";
import { AddSummaryResponse } from "./add_summary_response";
import { GetSummaryRequest } from "./get_summary_request";
import { GetSummaryResponse } from "./get_summary_response";

export const protobufPackage = "zelvy.summary";

export type SummaryServiceService = typeof SummaryServiceService;
export const SummaryServiceService = {
  getSummary: {
    path: "/zelvy.summary.SummaryService/GetSummary",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: GetSummaryRequest) => Buffer.from(GetSummaryRequest.encode(value).finish()),
    requestDeserialize: (value: Buffer) => GetSummaryRequest.decode(value),
    responseSerialize: (value: GetSummaryResponse) => Buffer.from(GetSummaryResponse.encode(value).finish()),
    responseDeserialize: (value: Buffer) => GetSummaryResponse.decode(value),
  },
  addSummary: {
    path: "/zelvy.summary.SummaryService/AddSummary",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: AddSummaryRequest) => Buffer.from(AddSummaryRequest.encode(value).finish()),
    requestDeserialize: (value: Buffer) => AddSummaryRequest.decode(value),
    responseSerialize: (value: AddSummaryResponse) => Buffer.from(AddSummaryResponse.encode(value).finish()),
    responseDeserialize: (value: Buffer) => AddSummaryResponse.decode(value),
  },
} as const;

export interface SummaryServiceServer extends UntypedServiceImplementation {
  getSummary: handleUnaryCall<GetSummaryRequest, GetSummaryResponse>;
  addSummary: handleUnaryCall<AddSummaryRequest, AddSummaryResponse>;
}

export interface SummaryServiceClient extends Client {
  getSummary(
    request: GetSummaryRequest,
    callback: (error: ServiceError | null, response: GetSummaryResponse) => void,
  ): ClientUnaryCall;
  getSummary(
    request: GetSummaryRequest,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: GetSummaryResponse) => void,
  ): ClientUnaryCall;
  getSummary(
    request: GetSummaryRequest,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: GetSummaryResponse) => void,
  ): ClientUnaryCall;
  addSummary(
    request: AddSummaryRequest,
    callback: (error: ServiceError | null, response: AddSummaryResponse) => void,
  ): ClientUnaryCall;
  addSummary(
    request: AddSummaryRequest,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: AddSummaryResponse) => void,
  ): ClientUnaryCall;
  addSummary(
    request: AddSummaryRequest,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: AddSummaryResponse) => void,
  ): ClientUnaryCall;
}

export const SummaryServiceClient = makeGenericClientConstructor(
  SummaryServiceService,
  "zelvy.summary.SummaryService",
) as unknown as {
  new (address: string, credentials: ChannelCredentials, options?: Partial<ClientOptions>): SummaryServiceClient;
  service: typeof SummaryServiceService;
  serviceName: string;
};
