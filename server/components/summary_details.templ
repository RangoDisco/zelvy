package components

import (
	"fmt"
	"server/pkg/types"
)

css progress(percent int) {
	width: { fmt.Sprintf("%d%%", percent) };
}

templ SummaryDetails(summary types.SummaryViewModel) {
	<section data-testid="summaryDetailsTemplate" class="carousel w-full bg-base-900 gap-2 md:gap-0 md:rounded-lg">
		for _, goal := range summary.Goals {
			<div data-testid="summaryDetailsTemplateMetric" class="carousel-item bg-base-200 flex-col justify-evenly rounded-lg aspect-square w-[45%] md:rounded-none md:px-2 md:aspect-auto md:h-56 md:w-1/5">
				<div class="pb-4">
					<h2 data-testid="summaryDetailsTemplateMetricName" class="text-sm text-primary-content px-2 pt-4 pb-2 md:text-lg">{ goal.Name }</h2>
					<hr class="opacity-10"/>
				</div>
				<div class="flex gap-4 items-center justify-center h-18 p-2 text-secondary md:border-r md:border-accent-neutral-content">
					<p data-testid="summaryDetailsTemplateMetricPicto" class="text-3xl">{ goal.Picto }</p>
					<h3 data-testid="summaryDetailsTemplateMetricValue" class="text-3xl">{ goal.DisplayValue }</h3>
				</div>
				<div class="pt-2 pb-4 px-2">
					<p class="opacity-80 text-sm mb-1 ml-2 md:text-lg">Objectif: <span data-testid="summaryDetailsTemplateMetricThreshold">{ goal.DisplayThreshold }</span></p>
					<div class="relative h-2 w-full">
						<div
							class={ "bg-primary h-2 rounded-l-full absolute top-0 left-0", progress(goal.Progression), templ.KV("rounded-r-full", goal.Progression == 100) }
						></div>
						<div class="bg-primary-content h-2 w-full rounded-full"></div>
					</div>
				</div>
			</div>
		}
	</section>
	<style>
    /* Hide default scrollbar */
    .no-scrollbar::-webkit-scrollbar {
        display: none;
    }
</style>
}
